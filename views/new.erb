<div class="columns">
  <div class="column is-8 is-offset-2">
    <div class="box">
      <nav class="breadcrumb has-bullet-separator" aria-label="breadcrumbs">
        <ul>
          <li><a href="/">Home</a></li>
          <li class="is-active"><a href="#" aria-current="page">Add New Anime</a></li>
        </ul>
      </nav>
      
      <h1 class="title has-text-centered has-text-light">Add New Anime</h1>
      
      <form id="newAnimeForm">
        <div class="field">
          <label class="label">Name</label>
          <div class="control has-icons-left">
            <input class="input" type="text" id="name" name="name" placeholder="Anime Title" required>
            <span class="icon is-small is-left">
              <i class="fas fa-film"></i>
            </span>
          </div>
        </div>
        
        <div class="field">
          <label class="label">Synopsis</label>
          <div class="control">
            <textarea class="textarea" id="synopsis" name="synopsis" placeholder="Anime synopsis/description" rows="4"></textarea>
          </div>
        </div>
        
        <div class="field">
          <div class="control">
            <label class="checkbox">
              <input type="checkbox" id="airing" name="airing">
              Currently Airing
            </label>
          </div>
        </div>
        
        <div class="field">
          <label class="label">Characters</label>
          <div class="control">
            <textarea class="textarea" id="chara" name="chara" placeholder="List of main characters (e.g. Naruto, Sasuke, Sakura)" rows="3"></textarea>
          </div>
          <p class="help">Separate character names with commas</p>
        </div>
        
        <div class="field is-grouped is-grouped-centered mt-5">
          <div class="control">
            <button type="submit" class="button is-primary is-medium">
              <span class="icon"><i class="fas fa-save"></i></span>
              <span>Save Anime</span>
            </button>
          </div>
          <div class="control">
            <a href="/" class="button is-light is-medium">
              <span class="icon"><i class="fas fa-ban"></i></span>
              <span>Cancel</span>
            </a>
          </div>
        </div>
      </form>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    // Form submission
    const form = document.getElementById('newAnimeForm');
    
    form.addEventListener('submit', function(e) {
      e.preventDefault();
      
      // Show loading state
      const submitBtn = form.querySelector('button[type="submit"]');
      submitBtn.classList.add('is-loading');
      
      const data = {
        name: document.getElementById('name').value,
        synopsis: document.getElementById('synopsis').value,
        airing: document.getElementById('airing').checked,
        chara: document.getElementById('chara').value
      };
      
      fetch('/api/anime', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
      })
      .then(response => {
        if (!response.ok) {
          throw new Error('Network response was not ok');
        }
        return response.json();
      })
      .then(result => {
        // Create notification
        const notification = document.createElement('div');
        notification.className = 'notification is-success';
        notification.innerHTML = `
          <button class="delete"></button>
          Anime added successfully!
        `;
        
        // Insert notification at top of form
        form.insertBefore(notification, form.firstChild);
        
        // Add event listener to close notification
        notification.querySelector('.delete').addEventListener('click', () => {
          notification.remove();
        });
        
        // Hide notification after 3 seconds
        setTimeout(() => {
          window.location.href = '/';
        }, 1500);
      })
      .catch(error => {
        console.error('Error:', error);
        
        // Create error notification
        const notification = document.createElement('div');
        notification.className = 'notification is-danger';
        notification.innerHTML = `
          <button class="delete"></button>
          Error adding anime: ${error.message}
        `;
        
        // Insert notification at top of form
        form.insertBefore(notification, form.firstChild);
        
        // Add event listener to close notification
        notification.querySelector('.delete').addEventListener('click', () => {
          notification.remove();
        });
      })
      .finally(() => {
        // Remove loading state
        submitBtn.classList.remove('is-loading');
      });
    });
  });
</script>